{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adri_\\\\Desktop\\\\Front Profesionales\\\\profront\\\\src\\\\components\\\\Header\\\\Header.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Dropdown } from \"react-bootstrap\";\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\nimport Link from \"next/link\";\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport Offcanvas from \"../Offcanvas\";\nimport NestedMenu from \"../NestedMenu\";\nimport { device } from \"../../utils\";\nimport Logo from \"../Logo\";\nimport { menuItems } from \"./menuItems\";\nimport imgP from \"../../assets/image/header-profile.png\";\nconst SiteHeader = styled.header`\n  .dropdown-toggle::after {\n    opacity: 0;\n  }\n\n  padding: 10px 0 10px 0;\n  position: absolute !important;\n  top: 0;\n  right: 0;\n  width: 100%;\n  z-index: 999;\n  @media ${device.lg} {\n    position: fixed !important;\n    transition: 0.6s;\n    &.scrolling {\n      transform: translateY(-100%);\n      transition: 0.6s;\n    }\n    &.reveal-header {\n      transform: translateY(0%);\n      box-shadow: 0 12px 34px -11px rgba(65, 62, 101, 0.1);\n      z-index: 9999;\n      background: ${({\n  dark,\n  theme\n}) => dark ? theme.colors.dark : \"#fff\"};\n    }\n  }\n`;\nconst ToggleButton = styled.button`\n  color: ${({\n  dark,\n  theme\n}) => dark ? theme.colors.lightShade : theme.colors.heading}!important;\n  border-color: ${({\n  dark,\n  theme\n}) => dark ? theme.colors.lightShade : theme.colors.heading}!important;\n`;\n\nconst Header = () => {\n  const gContext = useContext(GlobalContext);\n  const {\n    0: showScrolling,\n    1: setShowScrolling\n  } = useState(false);\n  const {\n    0: showReveal,\n    1: setShowReveal\n  } = useState(false);\n  const size = useWindowSize();\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    if (currPos.y < 0) {\n      setShowScrolling(true);\n    } else {\n      setShowScrolling(false);\n    }\n\n    if (currPos.y < -300) {\n      setShowReveal(true);\n    } else {\n      setShowReveal(false);\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(SiteHeader, {\n    className: `site-header site-header--sticky  site-header--absolute py-7 py-xs-0 sticky-header ${gContext.header.bgClass} ${gContext.header.align === \"left\" ? \"site-header--menu-left \" : gContext.header.align === \"right\" ? \"site-header--menu-right \" : \"site-header--menu-center \"}\n        ${gContext.header.theme === \"dark\" ? \"dark-mode-texts\" : \" \"} ${showScrolling ? \"scrolling\" : \"\"} ${gContext.header.reveal && showReveal && gContext.header.theme === \"dark\" ? \"reveal-header bg-blackish-blue\" : gContext.header.reveal && showReveal ? \"reveal-header\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    fluid: gContext.header.isFluid,\n    className: gContext.header.isFluid ? \"pr-lg-9 pl-lg-9\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(\"nav\", {\n    className: \"navbar site-navbar offcanvas-active navbar-expand-lg px-0 py-0 space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"brand-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Logo, {\n    white: gContext.header.theme === \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), gContext.header.button === \"account\" && __jsx(\"div\", {\n    className: \"header-btns header-btn-devider ml-auto pr-2 ml-lg-6 d-none d-xs-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-transparent text-uppercase font-size-3 heading-default-color focus-reset\",\n    href: \"/#\",\n    onClick: e => {\n      e.preventDefault();\n      gContext.toggleSignInModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, \"Iniciar sesi\\xF3n\"), __jsx(\"a\", {\n    className: `btn btn-${gContext.header.variant} text-uppercase font-size-3`,\n    href: \"/#\",\n    onClick: e => {\n      e.preventDefault();\n      gContext.toggleSignUpModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")), __jsx(ToggleButton, {\n    className: `navbar-toggler btn-close-off-canvas ml-3 ${gContext.visibleOffCanvas ? \"collapsed\" : \"\"}`,\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#mobile-menu\",\n    \"aria-controls\": \"mobile-menu\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\",\n    onClick: gContext.toggleOffCanvas,\n    dark: gContext.header.theme === \"dark\" ? 1 : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"icon icon-menu-34 icon-burger d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }))))), __jsx(Offcanvas, {\n    show: gContext.visibleOffCanvas,\n    onHideOffcanvas: gContext.toggleOffCanvas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }\n  }, __jsx(NestedMenu, {\n    menuItems: menuItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/adri_/Desktop/Front Profesionales/profront/src/components/Header/Header.js"],"names":["React","useState","useContext","styled","Container","Dropdown","useScrollPosition","Link","useWindowSize","GlobalContext","Offcanvas","NestedMenu","device","Logo","menuItems","imgP","SiteHeader","header","lg","dark","theme","colors","ToggleButton","button","lightShade","heading","Header","gContext","showScrolling","setShowScrolling","showReveal","setShowReveal","size","prevPos","currPos","y","bgClass","align","reveal","isFluid","e","preventDefault","toggleSignInModal","variant","toggleSignUpModal","visibleOffCanvas","toggleOffCanvas"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Dropdown } from \"react-bootstrap\";\r\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\r\nimport Link from \"next/link\";\r\n\r\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\r\nimport GlobalContext from \"../../context/GlobalContext\";\r\nimport Offcanvas from \"../Offcanvas\";\r\nimport NestedMenu from \"../NestedMenu\";\r\nimport { device } from \"../../utils\";\r\nimport Logo from \"../Logo\";\r\nimport { menuItems } from \"./menuItems\";\r\n\r\nimport imgP from \"../../assets/image/header-profile.png\";\r\n\r\nconst SiteHeader = styled.header`\r\n  .dropdown-toggle::after {\r\n    opacity: 0;\r\n  }\r\n\r\n  padding: 10px 0 10px 0;\r\n  position: absolute !important;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  z-index: 999;\r\n  @media ${device.lg} {\r\n    position: fixed !important;\r\n    transition: 0.6s;\r\n    &.scrolling {\r\n      transform: translateY(-100%);\r\n      transition: 0.6s;\r\n    }\r\n    &.reveal-header {\r\n      transform: translateY(0%);\r\n      box-shadow: 0 12px 34px -11px rgba(65, 62, 101, 0.1);\r\n      z-index: 9999;\r\n      background: ${({ dark, theme }) => (dark ? theme.colors.dark : \"#fff\")};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleButton = styled.button`\r\n  color: ${({ dark, theme }) =>\r\n    dark ? theme.colors.lightShade : theme.colors.heading}!important;\r\n  border-color: ${({ dark, theme }) =>\r\n    dark ? theme.colors.lightShade : theme.colors.heading}!important;\r\n`;\r\n\r\nconst Header = () => {\r\n  const gContext = useContext(GlobalContext);\r\n  const [showScrolling, setShowScrolling] = useState(false);\r\n  const [showReveal, setShowReveal] = useState(false);\r\n\r\n  const size = useWindowSize();\r\n\r\n  useScrollPosition(({ prevPos, currPos }) => {\r\n    if (currPos.y < 0) {\r\n      setShowScrolling(true);\r\n    } else {\r\n      setShowScrolling(false);\r\n    }\r\n    if (currPos.y < -300) {\r\n      setShowReveal(true);\r\n    } else {\r\n      setShowReveal(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <SiteHeader\r\n        className={`site-header site-header--sticky  site-header--absolute py-7 py-xs-0 sticky-header ${\r\n          gContext.header.bgClass\r\n        } ${\r\n          gContext.header.align === \"left\"\r\n            ? \"site-header--menu-left \"\r\n            : gContext.header.align === \"right\"\r\n            ? \"site-header--menu-right \"\r\n            : \"site-header--menu-center \"\r\n        }\r\n        ${gContext.header.theme === \"dark\" ? \"dark-mode-texts\" : \" \"} ${\r\n          showScrolling ? \"scrolling\" : \"\"\r\n        } ${\r\n          gContext.header.reveal &&\r\n          showReveal &&\r\n          gContext.header.theme === \"dark\"\r\n            ? \"reveal-header bg-blackish-blue\"\r\n            : gContext.header.reveal && showReveal\r\n            ? \"reveal-header\"\r\n            : \"\"\r\n        }`}\r\n      >\r\n        <Container\r\n          fluid={gContext.header.isFluid}\r\n          className={gContext.header.isFluid ? \"pr-lg-9 pl-lg-9\" : \"\"}\r\n        >\r\n          <nav className=\"navbar site-navbar offcanvas-active navbar-expand-lg px-0 py-0 space-between\">\r\n            {/* <!-- Brand Logo--> */}\r\n            <div className=\"brand-logo\">\r\n              <Logo white={gContext.header.theme === \"dark\"} />\r\n            </div>\r\n            {/* <div className=\"collapse navbar-collapse\">\r\n              <div className=\"navbar-nav-wrapper\">\r\n                <ul className=\"navbar-nav main-menu d-none d-lg-flex\">\r\n                  {menuItems.map(\r\n                    (\r\n                      { label, isExternal = false, name, items, ...rest },\r\n                      index\r\n                    ) => {\r\n                      const hasSubItems = Array.isArray(items);\r\n                      return (\r\n                        <React.Fragment key={name + index}>\r\n                          {hasSubItems ? (\r\n                            <li className=\"nav-item dropdown\" {...rest}>\r\n                              <a\r\n                                className=\"nav-link dropdown-toggle gr-toggle-arrow\"\r\n                                role=\"button\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                                href=\"/#\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                              >\r\n                                {label}\r\n                                <i className=\"icon icon-small-down\"></i>\r\n                              </a>\r\n                              <ul className=\"gr-menu-dropdown dropdown-menu \">\r\n                                {items.map((subItem, indexSub) => {\r\n                                  const hasInnerSubItems = Array.isArray(\r\n                                    subItem.items\r\n                                  );\r\n                                  return (\r\n                                    <React.Fragment\r\n                                      key={subItem.name + indexSub}\r\n                                    >\r\n                                      {hasInnerSubItems ? (\r\n                                        <li className=\"drop-menu-item dropdown\">\r\n                                          <a\r\n                                            className=\"dropdown-toggle gr-toggle-arrow\"\r\n                                            role=\"button\"\r\n                                            data-toggle=\"dropdown\"\r\n                                            aria-expanded=\"false\"\r\n                                            aria-haspopup=\"true\"\r\n                                            href=\"/#\"\r\n                                            onClick={(e) => e.preventDefault()}\r\n                                          >\r\n                                            {subItem.label}\r\n                                            <i className=\"icon icon-small-down\"></i>\r\n                                          </a>\r\n                                          <ul className=\"gr-menu-dropdown dropdown-menu dropdown-left\">\r\n                                            {subItem.items.map(\r\n                                              (itemInner, indexInnerMost) => (\r\n                                                <li\r\n                                                  className=\"drop-menu-item\"\r\n                                                  key={\r\n                                                    itemInner.name +\r\n                                                    indexInnerMost\r\n                                                  }\r\n                                                >\r\n                                                  {itemInner.isExternal ? (\r\n                                                    <a\r\n                                                      href={`${itemInner.name}`}\r\n                                                      target=\"_blank\"\r\n                                                      rel=\"noopener noreferrer\"\r\n                                                    >\r\n                                                      {itemInner.label}\r\n                                                    </a>\r\n                                                  ) : (\r\n                                                    <Link\r\n                                                      href={`/${itemInner.name}`}\r\n                                                    >\r\n                                                      <a>{itemInner.label}</a>\r\n                                                    </Link>\r\n                                                  )}\r\n                                                </li>\r\n                                              )\r\n                                            )}\r\n                                          </ul>\r\n                                        </li>\r\n                                      ) : (\r\n                                        <li className=\"drop-menu-item\">\r\n                                          {subItem.isExternal ? (\r\n                                            <a\r\n                                              href={`${subItem.name}`}\r\n                                              target=\"_blank\"\r\n                                              rel=\"noopener noreferrer\"\r\n                                            >\r\n                                              {subItem.label}\r\n                                            </a>\r\n                                          ) : (\r\n                                            <Link href={`/${subItem.name}`}>\r\n                                              <a>{subItem.label}</a>\r\n                                            </Link>\r\n                                          )}\r\n                                        </li>\r\n                                      )}\r\n                                    </React.Fragment>\r\n                                  );\r\n                                })}\r\n                              </ul>\r\n                            </li>\r\n                          ) : (\r\n                            <li className=\"nav-item\" {...rest}>\r\n                              {isExternal ? (\r\n                                <a\r\n                                  className=\"nav-link\"\r\n                                  href={`${name}`}\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                >\r\n                                  {label}\r\n                                </a>\r\n                              ) : (\r\n                                <Link href={`/${name}`}>\r\n                                  <a\r\n                                    className=\"nav-link\"\r\n                                    role=\"button\"\r\n                                    aria-expanded=\"false\"\r\n                                  >\r\n                                    {label}\r\n                                  </a>\r\n                                </Link>\r\n                              )}\r\n                            </li>\r\n                          )}\r\n                        </React.Fragment>\r\n                      );\r\n                    }\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            {gContext.header.button === \"cta\" && (\r\n              <div className=\"header-btn ml-auto ml-lg-0 mr-6 mr-lg-0 d-none d-xs-block\">\r\n                <Link href=\"/#\">\r\n                  <a className={`btn btn-${gContext.header.variant}`}>\r\n                    {gContext.header.buttonText}\r\n                  </a>\r\n                </Link>\r\n              </div>\r\n            )} */}\r\n\r\n            {/* {gContext.header.button === \"profile\" && (\r\n              <div className=\"header-btn-devider ml-auto ml-lg-5 pl-2 d-none d-xs-flex align-items-center\">\r\n                <div>\r\n                  <Link href=\"/#\">\r\n                    <a className=\"px-3 ml-7 font-size-7 notification-block flex-y-center position-relative\">\r\n                      <i className=\"fas fa-bell heading-default-color\"></i>\r\n                      <span className=\"font-size-3 count font-weight-semibold text-white bg-primary circle-24 border border-width-3 border border-white\">\r\n                        3\r\n                      </span>\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Dropdown className=\"show-gr-dropdown py-5\">\r\n                    <Dropdown.Toggle\r\n                      as=\"a\"\r\n                      className=\"proile media ml-7 flex-y-center\"\r\n                    >\r\n                      <div className=\"circle-40\">\r\n                        <img src={imgP} alt=\"\" />\r\n                      </div>\r\n                      <i className=\"fas fa-chevron-down heading-default-color ml-6\"></i>\r\n                    </Dropdown.Toggle>\r\n                    {size.width <= 991 ? (\r\n                      <Dropdown.Menu\r\n                        className=\"gr-menu-dropdown border-0 border-width-2 py-2 w-auto bg-default\"\r\n                        key=\"1\"\r\n                      >\r\n                        <Link href=\"/#\">\r\n                          <a className=\"dropdown-item py-2 font-size-3 font-weight-semibold line-height-1p2 text-uppercase\">\r\n                            Settings\r\n                          </a>\r\n                        </Link>\r\n                        <Link href=\"/#\">\r\n                          <a className=\"dropdown-item py-2 font-size-3 font-weight-semibold line-height-1p2 text-uppercase\">\r\n                            Edit Profile\r\n                          </a>\r\n                        </Link>\r\n                        <Link href=\"/#\">\r\n                          <a className=\" dropdown-item py-2 text-red font-size-3 font-weight-semibold line-height-1p2 text-uppercase\">\r\n                            Log Out\r\n                          </a>\r\n                        </Link>\r\n                      </Dropdown.Menu>\r\n                    ) : (\r\n                      <div\r\n                        className=\"dropdown-menu gr-menu-dropdown dropdown-right border-0 border-width-2 py-2 w-auto bg-default\"\r\n                        key=\"2\"\r\n                      >\r\n                        <Link href=\"/#\">\r\n                          <a className=\"dropdown-item py-2 font-size-3 font-weight-semibold line-height-1p2 text-uppercase\">\r\n                            Settings\r\n                          </a>\r\n                        </Link>\r\n                        <Link href=\"/#\">\r\n                          <a className=\"dropdown-item py-2 font-size-3 font-weight-semibold line-height-1p2 text-uppercase\">\r\n                            Edit Profile\r\n                          </a>\r\n                        </Link>\r\n                        <Link href=\"/#\">\r\n                          <a className=\" dropdown-item py-2 text-red font-size-3 font-weight-semibold line-height-1p2 text-uppercase\">\r\n                            Log Out\r\n                          </a>\r\n                        </Link>\r\n                      </div>\r\n                    )}\r\n                  </Dropdown>\r\n                </div>\r\n              </div>\r\n            )} */}\r\n\r\n            {gContext.header.button === \"account\" && (\r\n              <div className=\"header-btns header-btn-devider ml-auto pr-2 ml-lg-6 d-none d-xs-flex\">\r\n                <a\r\n                  className=\"btn btn-transparent text-uppercase font-size-3 heading-default-color focus-reset\"\r\n                  href=\"/#\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    gContext.toggleSignInModal();\r\n                  }}\r\n                >\r\n                  Iniciar sesión\r\n                </a>\r\n                <a\r\n                  className={`btn btn-${gContext.header.variant} text-uppercase font-size-3`}\r\n                  href=\"/#\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    gContext.toggleSignUpModal();\r\n                  }}\r\n                >\r\n                  Sign Up\r\n                </a>\r\n              </div>\r\n            )}\r\n\r\n            <ToggleButton\r\n              className={`navbar-toggler btn-close-off-canvas ml-3 ${\r\n                gContext.visibleOffCanvas ? \"collapsed\" : \"\"\r\n              }`}\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#mobile-menu\"\r\n              aria-controls=\"mobile-menu\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n              onClick={gContext.toggleOffCanvas}\r\n              dark={gContext.header.theme === \"dark\" ? 1 : 0}\r\n            >\r\n              {/* <i className=\"icon icon-simple-remove icon-close\"></i> */}\r\n              <i className=\"icon icon-menu-34 icon-burger d-block\"></i>\r\n            </ToggleButton>\r\n          </nav>\r\n        </Container>\r\n      </SiteHeader>\r\n      <Offcanvas\r\n        show={gContext.visibleOffCanvas}\r\n        onHideOffcanvas={gContext.toggleOffCanvas}\r\n      >\r\n        <NestedMenu menuItems={menuItems} />\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}